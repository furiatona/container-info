- pipeline: "Container Info"
  on: "EVENT"
  events:
  - type: "PUSH"
    refs:
    - "refs/heads/main"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  actions:
  - action: "test"
    type: "BUILD"
    working_directory: "/src/github.com/furiatona/container-info"
    docker_image_name: "library/golang"
    docker_image_tag: "1.18"
    execute_commands:
    - "cd container-info"
    - "export GOPATH=/"
    - "export GO15VENDOREXPERIMENT=1"
    - "go test"
    volume_mappings:
    - "/:/src/github.com/furiatona/container-info"
    cache_base_image: true
    shell: "BASH"
  - action: "build"
    type: "DOCKERFILE"
    docker_image_tag: "latest"
    dockerfile_path: "container-info/Dockerfile"
    context_path: "container-info"
    repository: "work-trial-346603/container-info"
    registry: "us.gcr.io"
    target_platform: "linux/amd64"
    integration_hash: "xrWygqPGELe3Evg9b698jZX1nY"
  - action: "push"
    type: "DOCKER_PUSH"
    docker_image_tag: "latest"
    repository: "work-trial-346603/container-info"
    registry: "us.gcr.io"
    integration_hash: "xrWygqPGELe3Evg9b698jZX1nY"
  - action: "wait for approval"
    type: "WAIT_FOR_APPLY"
    description: "Deploy Container Info to live environment. Make sure all check passed before approving."
    comment: "Do you want to approve deployment to Live?"
  - action: "deploy"
    type: "HELM"
    cluster: "work-trial-346603-gke"
    application_id: "work-trial-346603"
    execute_commands:
    - "cd container-info"
    - ""
    - "helm init --client-only --stable-repo-url https://charts.helm.sh/stable"
    - "helm upgrade --install --force --recreate-pods --namespace test --set-string image.repository=us.gcr.io/work-trial-346603/container-info --set-string image.tag=latest -f manifest/container-info/values.yaml container-info manifest/container-info"
    setup_commands:
    - "helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.7.0"
    - "helm plugin install https://github.com/hayorov/helm-gcs --version 0.2.1"
    zone_id: "us-central1"
    gke_auth_type: "SERVICE_ACCOUNT"
    kubectl_version: "v1.21.3"
    helm_version: "v2.16.1"
    shell: "SH"
    integration_hash: "xrWygqPGELe3Evg9b698jZX1nY"
  - action: "browser check"
    type: "BUILD"
    working_directory: "/buddy/container-info"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "curl --head -X GET --retry 10 --retry-connrefused --retry-delay 1 http://34.149.142.48/ping"
    setup_commands:
    - "apt update && apt install curl -y"
    volume_mappings:
    - "/:/buddy/container-info"
    shell: "BASH"
  - action: "send notification"
    type: "EMAIL"
    title: "$BUDDY_PIPELINE_NAME is deplopyed to Live!"
    content: "Service $BUDDY_PIPELINE_NAME is deployed to Live! \r\nThe test endpoint (http://34.149.142.48/ping) return 200 http code"
    recipients: "dheny.priatna@xendit.com"
